
local t = {}

--[[
print("sche test begin")
print(CL.Scheduler.Create)

CL.Scheduler.Create(t, 
    function(sche, st, s)
        print(sche, st,s)
    end
, 0, 2, 2);


local testFunc = function(sche, st, s)
        print(sche, st,s)
    end
CL.Scheduler.Create(t, testFunc, 0, 2, 0);

print("sche test end")
]]

--[[
local v1 = UE.Vector3(1,1,1)
local v2 = UE.Vector3(2,2,2)
print(v1,v2)
print(v1-v2)
print(v1.normalized)
]]


HitInfoConfig = CL.GameDataMgr.GetData(typeof(CL.HitInfoConfig))
TextConfig = CL.GameDataMgr.GetData(typeof(CL.TextConfig)) 

local function AddTextItem(name, array)
    local newItem = CL.TextConfig.TextConfigItem()
    newItem.Name = name
    --newItem.Text = {"Test"}
    defaultLang = array[1] or ""
    for i=1,CL.LanguageMgr.SupportLanguages.Length,1 do
        if array[i] == nil then
            array[i] = arrayZero
            --print("Set" .. i, defaultLang)
        end
    end
    newItem.Text = array
    TextConfig:AddData(newItem)
end

local function AddStoreItemTemplate(weaponName, dependWeapon, name, desc)
    AddTextItem(weaponName, {name})
    AddTextItem(weaponName .. "_Desc", {desc})

    storeItem = CL.UnlockContentItem()
    storeItem.name = weaponName
    storeItem.dependItemName = dependWeapon
    storeItem.iconName = weaponName
    storeItem.contentType = CL.UnlockContentConfig.UnlockContentType.Weapon
    storeItem.unlockRequireCoinNum = 1
    CL.UnlockContentConfig.AddItem(storeItem)
end



-- Light Blade
local lightBladeHitInfo = CL.HitInfoConfig.HitInfoConfigItem()
lightBladeHitInfo.Name = "WMD_LightBlade"
lightBladeHitInfo.VelocityMlp = 1.5
lightBladeHitInfo.DamageMlp = 30
lightBladeHitInfo.DamageThrough = 1.5
lightBladeHitInfo.DamageCrit = 1.5
lightBladeHitInfo.StabMlp = 1.5
lightBladeHitInfo.HitMlp = 120
lightBladeHitInfo.HitRandom = 0.2
lightBladeHitInfo.StabDamage = 120
lightBladeHitInfo.BreakDefenceMlp = 1
lightBladeHitInfo.HitBackMlp = 90
lightBladeHitInfo.KnockoutFactor = 0.1
lightBladeHitInfo.DizzyFactor = 0
lightBladeHitInfo.StiffValue = 2.5
HitInfoConfig:AddData(lightBladeHitInfo)

local giantSwordHitINfo = CL.HitInfoConfig.HitInfoConfigItem()
giantSwordHitINfo.Name = "WMD_GiantSword"
giantSwordHitINfo.VelocityMlp = 2
giantSwordHitINfo.DamageMlp = 20
giantSwordHitINfo.DamageThrough = 3
giantSwordHitINfo.DamageCrit = 1.5
giantSwordHitINfo.StabMlp = 1.5
giantSwordHitINfo.HitMlp = 120
giantSwordHitINfo.HitRandom = 0.1
giantSwordHitINfo.StabDamage = 120
giantSwordHitINfo.BreakDefenceMlp = 1
giantSwordHitINfo.HitBackMlp = 140
giantSwordHitINfo.KnockoutFactor = 0.3
giantSwordHitINfo.DizzyFactor = 0.3
giantSwordHitINfo.StiffValue = 4.5
HitInfoConfig:AddData(giantSwordHitINfo)



AddStoreItemTemplate("WMD_SwordLightBlade", "WMD_Stick", "LightBlade", "I'm LightBlade, Hummmmmmm, Model is provided by kevvy")

AddStoreItemTemplate("WMD_Stick", nil, "Stick", "I'm Stick")

AddStoreItemTemplate("WMD_GunAK47", nil, "AK47", "I'm AK47")

AddStoreItemTemplate("WMD_SwordMultiBlade", nil, "MultiBlade", "I'm MultiBlade")

AddStoreItemTemplate("WMD_SwordGiant", nil, "GiantSword", "I'm GiantSword, model is provided by Kevvy")

AddStoreItemTemplate("WMD_Scythe", nil, "Scythe", "I'm Scythe, model is provided by Xytill")

--[[
CS.CrossLink.ResourceMgr.Instantiate("Weapon/Stick")
CS.CrossLink.ResourceMgr.Instantiate("Weapon/GunAK47")
CS.CrossLink.ResourceMgr.Instantiate("Weapon/SwordMultiBlade")
CS.CrossLink.ResourceMgr.Instantiate("Weapon/SwordGiant")
CS.CrossLink.ResourceMgr.Instantiate("Weapon/SwordLightBlade")
]]

return Class(nil,nil,t)